/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_nb.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_tap_kp_kp: hold_tap_kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        hold_tap_layer_kp: hold_tap_layer_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base_Layer {
            // -----------------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  DEL |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC         &kp N1                      &kp N2  &kp N3    &kp N4  &kp N5       &kp N6                            &kp N7                          &kp N8        &kp N9         &kp N0          &kp NB_GRAVE
&kp TAB         &kp Q                       &kp W   &kp E     &kp R   &kp T        &kp Y                             &kp U                           &kp I         &kp O          &kp P           &hold_tap_kp_kp NB_QUESTION NB_A_RING
&kp LEFT_SHIFT  &kp A                       &kp S   &kp D     &kp F   &kp G        &kp H                             &kp J                           &kp K         &kp L          &kp NB_O_SLASH  &kp NB_AE
&kp LCTRL       &hold_tap_kp_kp LEFT_ALT Z  &kp X   &kp C     &kp V   &kp B        &kp N                             &kp M                           &kp NB_COMMA  &kp NB_PERIOD  &kp NB_MINUS    &hold_tap_kp_kp NB_STAR NB_SQT
                                                    &kp LGUI  &mo 1   &kp SPACE    &hold_tap_kp_kp LEFT_SHIFT ENTER  &hold_tap_layer_kp 2 BACKSPACE  &kp LEFT_ALT
            >;

            label = "Alphas";
        };

        Symbols {
            display-name = "SYM";
            label = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC           &kp F1               &kp F2                &kp F3                &kp F4                   &kp F5                      &kp F6     &kp F7     &kp F8     &kp F9         &kp F11        &kp DEL
&kp TAB           &kp NB_EXCLAMATION   &kp NB_DOUBLE_QUOTES  &kp NB_HASH           &kp NB_DOLLAR            &kp NB_PERCENT              &kp KP_N7  &kp KP_N8  &kp KP_N9  &none          &none          &none
&kp LEFT_SHIFT    &kp NB_AMPERSAND     &kp NB_SLASH          &kp NB_AT             &kp NB_LEFT_PARENTHESIS  &kp NB_RIGHT_PARENTHESIS    &kp KP_N4  &kp KP_N5  &kp KP_N6  &none          &kp NB_UMLAUT  &none
&kp NB_LESS_THAN  &kp NB_GREATER_THAN  &kp NB_LEFT_BRACKET   &kp NB_RIGHT_BRACKET  &kp NB_LEFT_BRACE        &kp NB_RIGHT_BRACE          &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp NB_PERIOD  &trans         &kp NB_GRAVE
                                                             &kp LGUI              &trans                   &kp SPACE                   &kp KP_N0  &trans     &kp RALT
            >;
        };

        Functions {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4    &trans       &trans          &trans    &trans     &trans  &trans
&trans          &trans        &trans        &trans             &trans           &trans          &trans       &trans          &trans    &trans     &trans  &trans
&trans          &trans        &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans          &kp INS      &kp HOME        &kp UP    &kp END    &trans  &trans
&bt BT_CLR_ALL  &trans        &kp C_PREV    &kp C_NEXT         &kp C_PP         &none           &kp NB_PLUS  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &trans  &trans
                                            &trans             &trans           &trans          &trans       &trans          &trans
            >;

            label = "Functions";
        };
    };
};
